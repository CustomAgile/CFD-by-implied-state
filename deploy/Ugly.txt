<!DOCTYPE html>
<html>
<head>
    <title>CFD-by-implied-state-1.0.7</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Tue Dec 11 2018 22:37:12 GMT+0000 (UTC) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Tue Dec 11 2018 22:37:12 GMT+0000 (UTC)";
        var CHECKSUM = 22190336545;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Utils.AncestorPiAppFilter",{alias:"plugin.UtilsAncestorPiAppFilter",mixins:["Ext.AbstractPlugin","Rally.Messageable"],extend:"Ext.Component",statics:{RENDER_AREA_ID:"utils-ancestor-pi-app-filter"},config:{renderAreaId:"utils-ancestor-pi-app-filter",publisher:!1,allowNoEntry:!0,settingsConfig:{},ancestorLabel:"With ancestor",ancestorLabelWidth:110,ownerLabel:"and owned by",ownerOnlyLabel:"Owned by",ownerLabelWidth:110,labelStyle:"font-size: medium",singleRowMinWidth:840},portfolioItemTypes:[],readyDeferred:null,piTypesDeferred:null,isSubscriber:!1,changeSubscribers:[],publishedValue:{},constructor:function(a){this.callParent(arguments),this._setupPubSub(),Ext.tip.QuickTipManager.init()},initComponent:function(){this.callParent(arguments),this.addEvents("ready","select")},init:function(a){this.cmp=a,this.cmp.on("resize",this._onCmpResize,this),this.renderArea=this.cmp.down("#"+this.renderAreaId);var b=this.cmp.getSettingsFields;this.cmp.getSettingsFields=function(){return this._getSettingsFields(b.apply(a,arguments))}.bind(this);var c=this.cmp.defaultSettings;c["Utils.AncestorPiAppFilter.enableAncestorPiFilter2"]=!1,c["Utils.AncestorPiAppFilter.projectScope"]="current",this.cmp.setDefaultSettings(c),this._addControlCmp().then({scope:this,success:function(){this._setReady()}})},notifySubscribers:function(){var a=this._getValue();_.each(this.changeSubscribers,function(b){this.publish(b,a)},this)},getFilterForType:function(a){var b,c=a.toLowerCase(),d=this._getValue();if(d.piTypePath){var e=d.piTypePath,f=d.isPiSelected,g=d.pi,h=this._piTypeAncestors(c,e);if(f&&null!=g&&null!=h){var i;i=this._propertyPrefix(c,h),i&&(b=new Rally.data.wsapi.Filter({property:i,value:g}))}else null!=g&&(b=new Rally.data.wsapi.Filter({property:"ObjectID",value:0}))}return b},getIgnoreProjectScope:function(){return this._getValue().ignoreProjectScope},_setupPubSub:function(){this.publisher?(this.subscribe(this,"registerChangeSubscriber",function(a){_.contains(this.changeSubscribers,a)||this.changeSubscribers.push(a),this.publish(a,this._getValue())},this),this.publish("reRegisterChangeSubscriber")):(this.subscriberEventName=Rally.getApp().getAppId()+this.$className,this.subscribe(this,this.subscriberEventName,function(a){this.intervalTimer&&(clearInterval(this.intervalTimer),delete this.intervalTimer),this.isSubscriber||(this.isSubscriber=!0,this._hideControlCmp()),this.publishedValue=a,this._onSelect()},this),this.publish("registerChangeSubscriber",this.subscriberEventName),this.intervalTimer=setInterval(function(){this.publish("registerChangeSubscriber",this.subscriberEventName)}.bind(this),500),this.subscribe(this,"reRegisterChangeSubscriber",function(){this.publish("registerChangeSubscriber",this.subscriberEventName)},this))},_getValue:function(){var a={};if(this._isSubscriber())a=this.publishedValue||{};else{if(this.piTypeSelector){var b=this.piTypeSelector.getRecord();if(b){var c=b.get("TypePath"),d=this.piSelector.getRecord(),e=this.piSelector.getValue();_.merge(a,{piTypePath:c,isPiSelected:!!d,pi:e})}}a.ignoreProjectScope=this._ignoreProjectScope()}return a},_setReady:function(){this.ready=!0,this.fireEvent("ready",this)},_onSelect:function(){this.ready&&this.fireEvent("select",this)},_getSettingsFields:function(a){var b=Rally.getApp().getSettings(),c=[{xtype:"rallycheckboxfield",id:"Utils.AncestorPiAppFilter.enableAncestorPiFilter2",name:"Utils.AncestorPiAppFilter.enableAncestorPiFilter2",fieldLabel:"Filter artifacts by ancestor portfolio item"},{xtype:"radiogroup",fieldLabel:"Show artifacts from",columns:1,vertical:!0,allowBlank:!1,items:[{boxLabel:"User's current project(s).",name:"Utils.AncestorPiAppFilter.projectScope",inputValue:"current",checked:"current"===b["Utils.AncestorPiAppFilter.projectScope"]},{boxLabel:"All projects in workspace.",name:"Utils.AncestorPiAppFilter.projectScope",inputValue:"workspace",checked:"workspace"===b["Utils.AncestorPiAppFilter.projectScope"]},{boxLabel:"User selectable (either current project(s) or all projects in workspace).",name:"Utils.AncestorPiAppFilter.projectScope",inputValue:"user",checked:"user"===b["Utils.AncestorPiAppFilter.projectScope"]}],listeners:{scope:this,change:function(a,b){}}}];return c=_.map(c,function(a){return _.merge(a,this.settingsConfig)},this),c.concat(a||[])},_addControlCmp:function(){var a=Ext.create("Deft.Deferred"),b={type:"hbox",align:"middle",defaultMargins:"0 10 0 0"},c=this.ownerLabelWidth;this.cmp.getWidth()<this.singleRowMinWidth&&(b="vbox",c=this.ancestorLabelWidth);var d=!1;0==this._showAncestorFilter()&&1==this._showIgnoreProjectScopeControl()&&(d=!0);var e={xtype:"container",id:"controlsArea",overflowX:"auto",layout:{type:"hbox",align:"top"},items:[{xtype:"container",id:"pubSubIndicatorArea",width:25,padding:"6 5 0 0",hidden:!this.publisher&&!this._isSubscriber(),items:[{xtype:"component",id:"publisherIndicator",html:'<span class="icon-bullhorn icon-large"></span>',hidden:!this.publisher},{xtype:"component",id:"subscriberIndicator",html:'<span class="icon-link icon-large"></span>',hidden:!this._isSubscriber()}]},{xtype:"container",id:"filtersArea",layout:b,items:[{xtype:"container",id:"ancestorFilterArea",layout:{type:"hbox",align:"middle"},items:[{xtype:"container",id:"piTypeArea",layout:{type:"hbox",align:"middle"}},{xtype:"container",id:"piSelectorArea",layout:{type:"hbox",align:"middle",padding:"0 0 0 5"}}]},{xtype:"container",id:"scopeControlArea",width:250,layout:{type:"hbox",align:"middle"},items:[{xtype:"rallycombobox",id:"ignoreScopeControl",stateful:!0,stateId:this.cmp.getContext().getScopedStateId("Utils.AncestorPiAppFilter.ignoreProjectScopeControl"),stateEvents:["select"],hidden:this._isSubscriber()||!this._showIgnoreProjectScopeControl(),displayField:"text",valueField:"value",labelStyle:this.labelStyle,labelWidth:c,fieldLabel:d?this.ownerOnlyLabel:this.ownerLabel,storeConfig:{fields:["text","value"],data:[{text:"Current Project(s)",value:!1},{text:"Any Project",value:!0}]},listeners:{scope:this,change:function(a,b){this._onSelect()}}}]}]}]};return this.renderArea&&(this.renderArea.setOverflowXY("auto","auto"),this.renderArea.add(e)),this._addTooltips(),Rally.data.util.PortfolioItemHelper.getPortfolioItemTypes().then({scope:this,success:function(b){this.portfolioItemTypes=b,!this._isSubscriber()&&this._showAncestorFilter()?(this.piTypeSelector=Ext.create("Rally.ui.combobox.PortfolioItemTypeComboBox",{xtype:"rallyportfolioitemtypecombobox",id:"Utils.AncestorPiAppFilter.piType",name:"Utils.AncestorPiAppFilter.piType",width:250,stateful:!0,stateId:this.cmp.getContext().getScopedStateId("Utils.AncestorPiAppFilter.piType"),stateEvents:["select"],fieldLabel:this.ancestorLabel,labelWidth:this.ancestorLabelWidth,labelStyle:this.labelStyle,valueField:"TypePath",allowNoEntry:!1,defaultSelectionPosition:"first",listeners:{scope:this,ready:function(b){b.addListener({scope:this,change:this._onPiTypeChange}),this._addPiSelector(b.getValue()).then({scope:this,success:function(){a.resolve()}})}}}),this.renderArea.down("#piTypeArea").add(this.piTypeSelector)):a.resolve()}}),a.promise},_addTooltips:function(){Ext.tip.QuickTipManager.register({target:"publisherIndicator",text:'This app broadcasts filter settings to any enabled ancestor filtered apps (indicated with <span class="icon-link icon-large"></span>)',showDelay:50,border:!0}),Ext.tip.QuickTipManager.register({target:"subscriberIndicator",text:'This app listens for filter settings from any enabled ancestor filter broadcast app (indicated with <span class="icon-bullhorn icon-large"></span>)',showDelay:50,border:!0})},_onCmpResize:function(a,b){var c={type:"hbox",align:"middle",defaultMargins:"0 10 0 0"};b<this.singleRowMinWidth&&(c={type:"vbox"});var d=this.renderArea.down("#filtersArea");if(d){var e=this.renderArea.down("#controlsArea"),f=d.removeAll(!1),g={xtype:"container",id:"filtersArea",layout:c,items:f,hidden:d.isHidden()};e.remove(d,!1),e.add(g)}},_hideControlCmp:function(){this.renderArea&&(this.renderArea.down("#pubSubIndicatorArea").show(),this.renderArea.down("#subscriberIndicator").show(),this.renderArea.down("#filtersArea").hide())},_onPiTypeChange:function(a,b,c){b&&(this._removePiSelector(),this._addPiSelector(b).then({scope:this,success:function(){this._setReady()}}))},_removePiSelector:function(){this.renderArea.down("#piSelectorArea").removeAll()},_addPiSelector:function(a){var b=Ext.create("Deft.Deferred");return this.piSelector=Ext.create("Rally.ui.combobox.ArtifactSearchComboBox",{id:"Utils.AncestorPiAppFilter.piSelector",width:250,labelAlign:"top",storeConfig:{models:a,autoLoad:!0,context:{project:null}},stateful:!0,stateId:this.cmp.getContext().getScopedStateId("Utils.AncestorPiAppFilter.piSelector"),stateEvents:["select"],valueField:"_ref",allowClear:!0,clearValue:null,allowNoEntry:this.allowNoEntry,noEntryValue:"",defaultSelectionPosition:null,listeners:{scope:this,select:function(a,b){this._onSelect()},ready:function(a,c){b.resolve()}}}),Ext.override(this.piSelector,{saveState:function(){var a,b=this,c=b.stateful&&b.getStateId(),d=b.hasListeners;c&&(a=b.getState()||{},d.beforestatesave&&b.fireEvent("beforestatesave",b,a)===!1||(Ext.state.Manager.set(c,a),d.statesave&&b.fireEvent("statesave",b,a)))}}),this.renderArea.down("#piSelectorArea").add(this.piSelector),b.promise},_showAncestorFilter:function(){return this.cmp.getSetting("Utils.AncestorPiAppFilter.enableAncestorPiFilter2")},_showIgnoreProjectScopeControl:function(){return"user"==this.cmp.getSetting("Utils.AncestorPiAppFilter.projectScope")},_ignoreProjectScope:function(){var a=!1;return this._showIgnoreProjectScopeControl()?a=this.renderArea.down("#ignoreScopeControl").getValue():"workspace"==this.cmp.getSetting("Utils.AncestorPiAppFilter.projectScope")&&(a=!0),a},_isSubscriber:function(){return this.isSubscriber},_propertyPrefix:function(a,b){var c;return"hierarchicalrequirement"===a||"userstory"===a?c=b[0].get("Name"):"defect"===a?c="Requirement."+b[0].get("Name"):a.startsWith("portfolioitem")&&(c="Parent"),c&&_.forEach(b.slice(1),function(a){c+=".Parent"},this),c},_piTypeAncestors:function(a,b){var c,d,e=null;return _.contains(["hierarchicalrequirement","userstory","defect"],a)?(c=_.findIndex(this.portfolioItemTypes,function(a){return a.get("TypePath").toLowerCase()===b.toLowerCase()}),e=this.portfolioItemTypes.slice(0,c+1)):a.startsWith("portfolioitem")&&(d=_.findIndex(this.portfolioItemTypes,function(b){return b.get("TypePath").toLowerCase()===a.toLowerCase()}),c=_.findIndex(this.portfolioItemTypes,function(a){return a.get("TypePath").toLowerCase()===b.toLowerCase()}),c>d&&(e=this.portfolioItemTypes.slice(d+1,c+1))),e}}),Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred");console.log("_checkChecksum",a);var c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){return text=a.responseText,CHECKSUM&&CHECKSUM!==c._generateChecksum(text)?(console.log("Checksums don't match!"),void b.resolve(!1)):void b.resolve(!0)}}),b.promise},afterRender:function(){var a=Rally.getApp();a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml}),this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"This app was created by the Rally Technical Services Team."}),APP_BUILD_DATE&&this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"Build date/time: "+APP_BUILD_DATE})}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.TechnicalServices.ImpliedCFDCalculator",{extend:"Rally.data.lookback.calculator.TimeSeriesCalculator",config:{value_field:null,granularity:"day",value_type:"sum",endDate:null,startDate:null,stateDisplayNames:["Not Started","In Progress","Done"],stateDisplayFunction:function(a){return Ext.isEmpty(a.ActualStartDate)?this.stateDisplayNames[0]:Ext.isEmpty(a.ActualEndDate)?this.stateDisplayNames[1]:this.stateDisplayNames[2]}},constructor:function(a){if(this.callParent(arguments),"Count"==this.value_field&&(this.value_type="count"),"sum"==this.value_type&&!this.value_field)throw"Cannot create Rally.TechnicalServices.ImpliedCFDCalculator by sum without value_field";this._prepareDates()},_prepareDates:function(){if(""==this.startDate&&(this.startDate=null),""==this.endDate&&(this.endDate=null),this.startDate&&"object"==typeof this.startDate&&(this.startDate=Rally.util.DateTime.toIsoString(this.startDate)),this.endDate&&"object"==typeof this.endDate&&(this.endDate=Rally.util.DateTime.toIsoString(this.endDate)),this.startDate&&!/-/.test(this.startDate))throw console.log(this.startDate),"Failed to create Rally.TechnicalServices.ImpliedCFDCalculator: startDate must be a javascript date or ISO date string";if(this.endDate&&!/-/.test(this.endDate))throw console.log(this.endDate),"Failed to create Rally.TechnicalServices.ImpliedCFDCalculator: endDate must be a javascript date or ISO date string";if(this.startDate&&this.endDate&&this.startDate>this.endDate){var a=this.startDate;this.startDate=this.endDate,this.endDate=a}this.startDate&&(this.startDate=this.startDate.replace(/T.*$/,"")),this.endDate&&(this.endDate=this.endDate.replace(/T.*$/,""))},getMetrics:function(){var a={f:"groupBySum",field:this.value_field,groupByField:"__ImpliedState",allowedValues:this.stateDisplayNames,display:"area"};return"count"==this.value_type&&(a.f="groupByCount"),[a]},getDerivedFieldsOnInput:function(){var a=this;return[{as:"__ImpliedState",f:function(b){return a.stateDisplayFunction(b)}}]},_buildSeriesConfig:function(a){for(var b=[],c=a.metrics,d=a.deriveFieldsAfterSummary,e=0,f=c.length;f>e;e+=1){var g=c[e];if("groupBySum"==g.f||"groupByCount"==g.f){var h=g.f.replace(/groupBy/,"");Ext.Array.each(g.allowedValues,function(a){b.push({f:h,name:a,type:g.display||"area",dashStyle:g.dashStyle||"Solid",stack:1})})}else b.push({name:g.as||g.field,type:g.display,dashStyle:g.dashStyle||"Solid"})}for(var i=0,j=d.length;j>i;i+=1){var k=d[i];b.push({name:k.as,type:k.display,dashStyle:k.dashStyle||"Solid"})}return b},_convertNullToBlank:function(a){for(var b=a.length,c=0;b>c;c++)null===a[c][this.group_by_field]&&(a[c][this.group_by_field]="");return a},runCalculation:function(a){var b=this._prepareCalculatorConfig(),c=this._buildSeriesConfig(b),d=this.prepareCalculator(b),e=this._convertNullToBlank(a);e.length>0&&d.addSnapshots(e,this._getStartDate(e),this._getEndDate(e));var f=this._transformLumenizeDataToHighchartsSeries(d,c);return Ext.Array.each(f.series,function(a){""===a.name&&(a.name="None"),a.name===!1&&(a.name="False"),1==a.name&&(a.name="True")}),f}}),Ext.define("TSCFDByImpliedState",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},config:{defaultSettings:{metric_field:"Count"}},items:[{id:Utils.AncestorPiAppFilter.RENDER_AREA_ID,xtype:"container",flex:1,layout:{type:"hbox",align:"middle",defaultMargins:"0 10 10 0"}},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"TSCFDByImpliedState"},launch:function(){this.ancestorFilterPlugin=Ext.create("Utils.AncestorPiAppFilter",{ptype:"UtilsAncestorPiAppFilter",pluginId:"ancestorFilterPlugin",allowNoEntry:!1,settingsConfig:{labelWidth:100,minWidth:200,margin:10},listeners:{scope:this,ready:function(a){return this.getSetting("type_path")?(a.addListener({scope:this,select:function(){this._makeChart()}}),void this._makeChart()):void this.down("#display_box").add({xtype:"container",html:'No settings applied.  Select "Edit App Settings." from the gear menu.'})}}}),this.addPlugin(this.ancestorFilterPlugin)},setLoading:function(a){var b=this.down("#display_box");b.setLoading(a)},_makeChart:function(){var a=this,b=this.down("#display_box");b.removeAll(),this.setLoading("Gathering Data...");var c=this.getContext().getProject().ObjectID,d=this.getSetting("type_path"),e=this.getSetting("metric_field"),f=this.getSetting("time_period")||1,g="Implied State CFD Over Last "+f+" Month(s)",h=Rally.util.DateTime.add(new Date,"month",-1*f),i=new Rally.data.lookback.QueryFilter.and([{property:"_TypeHierarchy",value:d}]),j=new Rally.data.lookback.QueryFilter.or([{property:"_ValidFrom",operator:">=",value:Rally.util.DateTime.toIsoString(h)},{property:"_ValidTo",operator:">=",value:Rally.util.DateTime.toIsoString(h)}]);if(i=i.and(j),!this.searchAllProjects()){var k=new Rally.data.lookback.QueryFilter({property:"_ProjectHierarchy",value:c});i=i.and(k)}var l=this.getMilestoneFilter();l&&(i=i.and(l));var m=this.ancestorFilterPlugin.getFilterForType(d);if(m){var n=new Rally.data.lookback.QueryFilter({property:"_ItemHierarchy",value:Rally.util.Ref.getOidFromRef(m.value)||0});i=i.and(n)}var o=Rally.data.lookback.QueryFilter.or([{property:"_PreviousValues.ActualStartDate",operator:"exists",value:!0},{property:"_PreviousValues.ActualEndDate",operator:"exists",value:!0},{property:"_SnapshotNumber",value:0}]),p=Rally.data.lookback.QueryFilter.or([{property:"__At",value:Rally.util.DateTime.toIsoString(Rally.util.DateTime.add(h,"day",1))},{property:"__At",value:"current"}]);p.or(o);b.add({xtype:"rallychart",storeType:"Rally.data.lookback.SnapshotStore",calculatorType:"Rally.TechnicalServices.ImpliedCFDCalculator",calculatorConfig:{startDate:h,endDate:new Date,value_field:e},storeConfig:{filters:i,compress:!0,fetch:[e,"ActualStartDate","ActualEndDate","_UnformattedID","Milestones"],removeUnauthorizedSnapshots:!0,listeners:{load:function(){a.setLoading(!1)}}},chartColors:["#CCCCCC","#00a9e0","#009933"],chartConfig:{chart:{zoomType:"xy",events:{redraw:function(){}}},title:{text:g},xAxis:{tickmarkPlacement:"on",tickInterval:30,title:{text:""}},yAxis:[{title:{text:e}}],plotOptions:{series:{marker:{enabled:!1},stacking:"normal"}}}})},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},_addCountToChoices:function(a){a.add({name:"Count",value:"Count",fieldDefinition:{}})},_filterOutExceptNumbers:function(a){a.filter([{filterFn:function(a){var b=a.get("name");if("Formatted ID"==b||"Object ID"==b)return!1;if("Latest Discussion Age In Minutes"==b)return!1;if("Count"==b)return!0;var c=a.get("fieldDefinition").attributeDefinition,d=null;return c&&(d=c.AttributeType),"QUANTITY"==d||"INTEGER"==d||"DECIMAL"==d?!0:!1}}])},getSettingsFields:function(){var a=this,b=this.getSetting("time_period")||1;return[{name:"type_path",xtype:"rallyportfolioitemtypecombobox",valueField:"TypePath",defaultSelectionPosition:null,labelWidth:100,labelAlign:"left",minWidth:200,margin:10},{name:"metric_field",xtype:"rallyfieldcombobox",fieldLabel:"Measure",labelWidth:100,labelAlign:"left",minWidth:200,margin:10,autoExpand:!1,alwaysExpanded:!1,model:"PortfolioItem",listeners:{ready:function(b){a._addCountToChoices(b.getStore()),a._filterOutExceptNumbers(b.getStore());var c=a.getSetting("metric_field");c&&b.setValue(c),b.getValue()||b.setValue(b.getStore().getAt(0))}},readyEvent:"ready"},{name:"time_period",xtype:"rallycombobox",fieldLabel:"Start",labelWidth:100,labelAlign:"left",minWidth:200,margin:10,value:b,displayField:"name",valueField:"value",store:Ext.create("Rally.data.custom.Store",{data:[{name:"A Month Ago",value:1},{name:"2 Months Ago",value:2},{name:"3 Months Ago",value:3}]})}]},isMilestoneScoped:function(){var a=!1,b=this.getContext().getTimeboxScope();return b&&"milestone"==b.getType()&&(a=!0),a},searchAllProjects:function(){return this.ancestorFilterPlugin.getIgnoreProjectScope()},getMilestoneFilter:function(){var a;if(this.isMilestoneScoped()){var b=this.getContext().getTimeboxScope();if(b){var c=null,d=b.getRecord();d&&(c=d.get("ObjectID")),a=new Rally.data.lookback.QueryFilter({property:"Milestones",value:c})}}return a},onTimeboxScopeChange:function(a){this.callParent(arguments),this._makeChart()}});

               Rally.launchApp('TSCFDByImpliedState', {
                   name: 'CFD-by-implied-state'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>