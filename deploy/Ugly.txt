<!DOCTYPE html>
<html>
<head>
    <title>CFD-by-implied-state-0.2.0</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Sep 19 2018 23:11:49 GMT+0000 (UTC) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Sep 19 2018 23:11:49 GMT+0000 (UTC)";
        var CHECKSUM = 5434347606;
    </script>

    <script type="text/javascript" src="/apps/2.0/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.0/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred");console.log("_checkChecksum",a);var c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){return text=a.responseText,CHECKSUM&&CHECKSUM!==c._generateChecksum(text)?(console.log("Checksums don't match!"),void b.resolve(!1)):void b.resolve(!0)}}),b.promise},afterRender:function(){var a=Rally.getApp();a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml}),this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"This app was created by the Rally Technical Services Team."}),APP_BUILD_DATE&&this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"Build date/time: "+APP_BUILD_DATE})}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.TechnicalServices.ImpliedCFDCalculator",{extend:"Rally.data.lookback.calculator.TimeSeriesCalculator",config:{value_field:null,granularity:"day",value_type:"sum",endDate:null,startDate:null,stateDisplayNames:["Not Started","In Progress","Done"],stateDisplayFunction:function(a){return Ext.isEmpty(a.ActualStartDate)?this.stateDisplayNames[0]:Ext.isEmpty(a.ActualEndDate)?this.stateDisplayNames[1]:this.stateDisplayNames[2]}},constructor:function(a){if(this.callParent(arguments),"Count"==this.value_field&&(this.value_type="count"),"sum"==this.value_type&&!this.value_field)throw"Cannot create Rally.TechnicalServices.ImpliedCFDCalculator by sum without value_field";this._prepareDates()},_prepareDates:function(){if(""==this.startDate&&(this.startDate=null),""==this.endDate&&(this.endDate=null),this.startDate&&"object"==typeof this.startDate&&(this.startDate=Rally.util.DateTime.toIsoString(this.startDate)),this.endDate&&"object"==typeof this.endDate&&(this.endDate=Rally.util.DateTime.toIsoString(this.endDate)),this.startDate&&!/-/.test(this.startDate))throw console.log(this.startDate),"Failed to create Rally.TechnicalServices.ImpliedCFDCalculator: startDate must be a javascript date or ISO date string";if(this.endDate&&!/-/.test(this.endDate))throw console.log(this.endDate),"Failed to create Rally.TechnicalServices.ImpliedCFDCalculator: endDate must be a javascript date or ISO date string";if(this.startDate&&this.endDate&&this.startDate>this.endDate){var a=this.startDate;this.startDate=this.endDate,this.endDate=a}this.startDate&&(this.startDate=this.startDate.replace(/T.*$/,"")),this.endDate&&(this.endDate=this.endDate.replace(/T.*$/,""))},getMetrics:function(){var a={f:"groupBySum",field:this.value_field,groupByField:"__ImpliedState",allowedValues:this.stateDisplayNames,display:"area"};return"count"==this.value_type&&(a.f="groupByCount"),[a]},getDerivedFieldsOnInput:function(){var a=this;return[{as:"__ImpliedState",f:function(b){return a.stateDisplayFunction(b)}}]},_buildSeriesConfig:function(a){for(var b=[],c=a.metrics,d=a.deriveFieldsAfterSummary,e=0,f=c.length;f>e;e+=1){var g=c[e];if("groupBySum"==g.f||"groupByCount"==g.f){var h=g.f.replace(/groupBy/,"");Ext.Array.each(g.allowedValues,function(a){b.push({f:h,name:a,type:g.display||"area",dashStyle:g.dashStyle||"Solid",stack:1})})}else b.push({name:g.as||g.field,type:g.display,dashStyle:g.dashStyle||"Solid"})}for(var i=0,j=d.length;j>i;i+=1){var k=d[i];b.push({name:k.as,type:k.display,dashStyle:k.dashStyle||"Solid"})}return b},_convertNullToBlank:function(a){for(var b=a.length,c=0;b>c;c++)null===a[c][this.group_by_field]&&(a[c][this.group_by_field]="");return a},runCalculation:function(a){var b=this._prepareCalculatorConfig(),c=this._buildSeriesConfig(b),d=this.prepareCalculator(b),e=this._convertNullToBlank(a);e.length>0&&d.addSnapshots(e,this._getStartDate(e),this._getEndDate(e));var f=this._transformLumenizeDataToHighchartsSeries(d,c);return Ext.Array.each(f.series,function(a){""===a.name&&(a.name="None"),a.name===!1&&(a.name="False"),1==a.name&&(a.name="True")}),f}}),Ext.define("TSCFDByImpliedState",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},config:{defaultSettings:{metric_field:"Count",searchAllProjects:!1}},items:[{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"TSCFDByImpliedState"},launch:function(){return this.getSetting("type_path")?void this._makeChart():void this.down("#display_box").add({xtype:"container",html:'No settings applied.  Select "Edit App Settings." from the gear menu.'})},_makeChart:function(){var a=this,b=this.down("#display_box");b.removeAll(),this.setLoading("Gathering Data...");var c=this.getContext().getProject().ObjectID,d=this.getSetting("type_path"),e=this.getSetting("metric_field"),f=this.getSetting("time_period")||1,g="Implied State CFD Over Last "+f+" Month(s)",h=Rally.util.DateTime.add(new Date,"month",-1*f),i=new Rally.data.lookback.QueryFilter({property:"_TypeHierarchy",value:d});if(!this.searchAllProjects()){var j=new Rally.data.lookback.QueryFilter({property:"_ProjectHierarchy",value:c});i=i.and(j)}if(this.isMilestoneScoped()){var k=this.getContext().getTimeboxScope();if(k){var l=k.getQueryFilter(),m=new Rally.data.lookback.QueryFilter({property:l.property,value:l.value});i=i.and(m)}}var n=Rally.data.lookback.QueryFilter.or([{property:"_PreviousValues.ActualStartDate",operator:"exists",value:!0},{property:"_PreviousValues.ActualEndDate",operator:"exists",value:!0},{property:"_SnapshotNumber",value:0}]),o=Rally.data.lookback.QueryFilter.or([{property:"__At",value:Rally.util.DateTime.toIsoString(Rally.util.DateTime.add(h,"day",1))},{property:"__At",value:"current"}]);o.or(n);b.add({xtype:"rallychart",storeType:"Rally.data.lookback.SnapshotStore",calculatorType:"Rally.TechnicalServices.ImpliedCFDCalculator",calculatorConfig:{startDate:h,endDate:new Date,value_field:e},storeConfig:{filters:i,compress:!0,fetch:[e,"ActualStartDate","ActualEndDate","_UnformattedID"],removeUnauthorizedSnapshots:!0,listeners:{load:function(){a.setLoading(!1)}}},chartColors:["#CCCCCC","#00a9e0","#009933"],chartConfig:{chart:{zoomType:"xy",events:{redraw:function(){}}},title:{text:g},xAxis:{tickmarkPlacement:"on",tickInterval:30,title:{text:""}},yAxis:[{title:{text:e}}],plotOptions:{series:{marker:{enabled:!1},stacking:"normal"}}}})},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},_addCountToChoices:function(a){a.add({name:"Count",value:"Count",fieldDefinition:{}})},_filterOutExceptNumbers:function(a){a.filter([{filterFn:function(a){var b=a.get("name");if("Formatted ID"==b||"Object ID"==b)return!1;if("Latest Discussion Age In Minutes"==b)return!1;if("Count"==b)return!0;var c=a.get("fieldDefinition").attributeDefinition,d=null;return c&&(d=c.AttributeType),"QUANTITY"==d||"INTEGER"==d||"DECIMAL"==d?!0:!1}}])},getSettingsFields:function(){var a=this,b=this.getSetting("time_period")||1;return[{id:"searchAllProjects",name:"searchAllProjects",fieldLabel:"Scope Across Workspace",labelAlign:"left",xtype:"rallycheckboxfield",hidden:!this.isMilestoneScoped()},{name:"type_path",xtype:"rallycombobox",displayField:"DisplayName",fieldLabel:"Artifact Type",autoExpand:!0,storeConfig:{model:"TypeDefinition",filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}]},labelWidth:100,labelAlign:"left",minWidth:200,margin:10,valueField:"TypePath",bubbleEvents:["select","ready"],readyEvent:"ready"},{name:"metric_field",xtype:"rallyfieldcombobox",fieldLabel:"Measure",labelWidth:100,labelAlign:"left",minWidth:200,margin:10,autoExpand:!1,alwaysExpanded:!1,model:"PortfolioItem",listeners:{ready:function(b){a._addCountToChoices(b.getStore()),a._filterOutExceptNumbers(b.getStore());var c=a.getSetting("metric_field");c&&b.setValue(c),b.getValue()||b.setValue(b.getStore().getAt(0))}},readyEvent:"ready"},{name:"time_period",xtype:"rallycombobox",fieldLabel:"Start",labelWidth:100,labelAlign:"left",minWidth:200,margin:10,value:b,displayField:"name",valueField:"value",store:Ext.create("Rally.data.custom.Store",{data:[{name:"A Month Ago",value:1},{name:"3 Months Ago",value:3},{name:"6 Months Ago",value:6},{name:"A Year Ago",value:12},{name:"3 Years Ago",value:36}]})}]},isMilestoneScoped:function(){var a=!1,b=this.getContext().getTimeboxScope();return b&&"milestone"==b.getType()&&(a=!0),a},searchAllProjects:function(){var a=this.getSetting("searchAllProjects");return this.isMilestoneScoped()&&a},onTimeboxScopeChange:function(a){this.callParent(arguments),this._makeChart()}});

               Rally.launchApp('TSCFDByImpliedState', {
                   name: 'CFD-by-implied-state'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>